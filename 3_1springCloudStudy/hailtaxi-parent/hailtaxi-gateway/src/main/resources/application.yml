server:
  port: 8001
spring:
  application:
    name: hailtaxi-gateway
  main:
    allow-bean-definition-overriding: true
    # 设置redis限流
  redis:
    host: 127.0.0.1
    port: 6379
  cloud:
    #consul 配置
    consul:
      host: 127.0.0.1
      port: 8500
      #服务发现配置
      discovery:
        #注册到consul中的服务名字
        service-name: ${spring.application.name}
        # 服务注册的实例id，不要重复。官网默认方式：随机数 默认： 应用名：port
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
        prefer-ip-address: true
        #开启服务注册
        register: true
        #开启服务发现
        enabled: true
        # 2分钟后健康检查未通过取消注册
        health-check-critical-timeout: 2m
        # consul 健康检查的轮询周期
        health-check-interval: 10s
    # 配置路由
    gateway:
      # 跨域配置 此方法不适合cookie跨域
      globalcors:
        cors-configurations:
          '[/*]':
            #允许任何跨域方式
            allowedOrigins: "*"
            #允许的跨域方法
            allowedMethods:
              - Get
              - POST
              - PUT
      #路由配置
      routes:
        # 唯一标识符
        - id: hailtaxi-driver
          uri: lb://hailtaxi-driver
          # 路由断言
          predicates:
            - Path=/driver/**
            - Cookie=username,itheima
            - Header=token,123456
            - Method=GET,POST
            - Token=springcloud
          filters:
            - PayMethod=alipay,业务整合
            # #请求数限流 名字不能随便写 ，使用默认的facatory
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@ipKeyResolver}"
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        # 唯一标识符
        - id: hailtaxi-order
          uri: lb://hailtaxi-order
          # 路由断言
          predicates:
            - Path= /order/**
        # 唯一标识符
        - id: hailtaxi-pay
          uri: lb://hailtaxi-pay
          # 路由断言
          predicates:
            - Path= /pay/**

management:
  endpoint:
    health:
      show-details: always